#include <stdio.h>
#include "pico/stdlib.h"
#include "matrix_display.hpp"
#include "pindefs.hpp"




constexpr uint LED_period_us = 100;


const uint8_t numbers[][5] = {
    {0b01110, 0b10001, 0b10001, 0b10001, 0b01110},//0
    {0b00100, 0b11100, 0b00100, 0b00100, 0b11111},//1
    {0b11110, 0b00001, 0b01110, 0b10000, 0b11111},//2
    {0b11110, 0b00001, 0b11110, 0b00001, 0b11110},//3
    {0b10010, 0b10010, 0b10010, 0b11111, 0b00010},//4
    {0b11111, 0b10000, 0b11110, 0b00001, 0b11110},//5
    {0b01110, 0b10000, 0b11110, 0b10001, 0b01110},//6
    {0b11111, 0b00001, 0b00010, 0b00100, 0b00100},//7
    {0b01110, 0b10001, 0b01110, 0b10001, 0b01110},//8
    {0b01110, 0b10001, 0b01111, 0b00001, 0b01110} //9
};


uint8_t numbers_bycol[10][5] = {
    {0b01110, 0b10001, 0b10001, 0b10001, 0b01110},
};

const uint8_t alphabet[][5] = {
    {0b01110, 0b10001, 0b11111, 0b10001, 0b10001},//A
    {0b11110, 0b10001, 0b11110, 0b10001, 0b11110},//B
    {0b01111, 0b10000, 0b10000, 0b10000, 0b01111},//C
    {0b11110, 0b10001, 0b10001, 0b10001, 0b11110},//D
    {0b11111, 0b10000, 0b11110, 0b10000, 0b11111},//E
    {0b11111, 0b10000, 0b11110, 0b10000, 0b10000},//F
    {0b01111, 0b10000, 0b10011, 0b10001, 0b01111},//G
    {0b10001, 0b10001, 0b11111, 0b10001, 0b10001},//H
    {0b11111, 0b00100, 0b00100, 0b00100, 0b11111},//I
    {0b11111, 0b00010, 0b00010, 0b10010, 0b01100},//J
    {0b10001, 0b10010, 0b11100, 0b10010, 0b10001},//K
    {0b10000, 0b10000, 0b10000, 0b10000, 0b11111},//L
    {0b11011, 0b10101, 0b10101, 0b10101, 0b10001},//M
    {0b11001, 0b10101, 0b10101, 0b10101, 0b10011},//N
    {0b01110, 0b10001, 0b10001, 0b10001, 0b01110},//O
    {0b11110, 0b10001, 0b10001, 0b11110, 0b10000},//P
    {0b01110, 0b10001, 0b10001, 0b10010, 0b01101},//Q
    {0b11110, 0b10001, 0b10001, 0b11110, 0b10001},//R
    {0b01111, 0b10000, 0b01110, 0b00001, 0b11110},//S
    {0b11111, 0b00100, 0b00100, 0b00100, 0b00100},//T
    {0b10001, 0b10001, 0b10001, 0b10001, 0b01110},//U
    {0b10001, 0b10001, 0b01010, 0b01010, 0b00100},//V
    {0b10001, 0b10101, 0b10101, 0b10101, 0b01010},//W
    {0b10001, 0b01010, 0b00100, 0b01010, 0b10001},//X
    {0b10001, 0b01010, 0b00100, 0b00100, 0b00100},//Y
    {0b11110, 0b00001, 0b01110, 0b10000, 0b01111} //Z
};
const uint8_t symbols[][5] = {
    {0b00000, 0b00000, 0b00000, 0b00000, 0b00000},// 
    {0b00100, 0b00100, 0b00100, 0b00000, 0b00100},//!
    {0b01010, 0b00000, 0b00000, 0b00000, 0b00000},//"
    {0b01010, 0b11111, 0b01010, 0b11111, 0b01010},//#
    {0b01111, 0b10100, 0b01110, 0b00101, 0b11110},//$
    {0b11001, 0b11010, 0b00100, 0b01011, 0b10011}//%
    
};
const uint8_t icons[][5] = {
    {0b01010, 0b01010, 0b01010, 0b10001, 0b01110}
};
const uint8_t* char_to_matrix(const char charIn){
    if(((charIn >= 'A')&&(charIn <= 'Z'))||((charIn >= 'a')&&(charIn <= 'z'))){
        return alphabet[(charIn&0x1F)-1];
    }
    if((charIn >= '0')&&(charIn <='9')){
        return numbers[charIn&0x0F];
    }
    if((charIn >= ' ')&&(charIn <='%')){
        return symbols[charIn&0x0F];
    }
    if(charIn > 0x7F){
        return icons[charIn&0x7F];
    }
    return symbols[0];
}

inline void set_led(uint x, uint y){
    static const uint rows[] = {LED_R1,LED_R2,LED_R3,LED_R4,LED_R5};
    static const uint cols[] = {LED_C1,LED_C2,LED_C3,LED_C4,LED_C5};
    gpio_put_masked(MASK_ALL_COLS|MASK_ALL_ROWS, (1<<cols[y])|(MASK_ALL_ROWS &~(1<<rows[x])));
    sleep_us(LED_period_us);
}

void disp_char(const uint8_t * character){
    for(uint8_t i = 0; i < 5; i++){ 
        for(uint8_t j = 0; j < 5; j++){
            if((character[i]>>(4-j))&0x01){
                set_led(j,i);
            } 
        }
    }
}